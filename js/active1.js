//время до появления медального окна 1, зависящее от размера страницы
var timeout;
var countignore = 0;
var ignore = true;
var dialogOn = false;

//подготовка активной среды (создание окон)
function prepare_environment(){

	//окна активной среды
	timeout=document.body.innerHTML.length;
	//диалоговый модуль
	document.body.innerHTML+="<div id='dialog' class='dialog' style='margin-left:-40px; margin-top: -50px; background-color: #e0a800;'>"+
		"<div class='label' onclick='toggleDialog()' style='font-size:20px;'></div>"+
		"<div class='header' >История:</div>"+
		"<div class='history' id='history' style='background-color: #ffffff; margin-top: 30px;'></div>"+
		"<div class='question'><input id='Qdialog' onKeyDown='if(event.keyCode==13)ask(&quot;Qdialog&quot;)'/><br>"+
			"<button onclick='ask(\"Qdialog\")' style='font-size:20px;'>Задать вопрос</button>"
		"</div>"+
	"</div>";
	//крупный план изображений
	document.body.innerHTML += "<div id='imgalert' style='display:none'>" + "<div class='bg' onclick='hide(\"imgalert\")'>&nbsp;</div>" + "<img id='img_in_alert' src='' />" + "</div>";

	//РАСПОЗНАВАНИЕ РЕЧИ
	//поле с распознаванием речи. Задаем API-ключ

	window.ya.speechkit.settings.apikey = '5c6d6536-b453-4589-9bc7-f16c7a795106';

	// Добавление элемента управления "Поле для голосового ввода".

	var textline = new ya.speechkit.Textline(
		'Qdialog', {
			onInputFinished: function(text) {
			ask("Qdialog");
		  }
		});

	//КОНЕЦ РАСПОЗНАВАНИЯ РЕЧИ
	//привязка окон активной среды с событиями. Показ модального окна 1 через интервал времени, зависящий от размера страницы

	timer=setInterval(alert_over_time, timeout);

	try {
		//открытие журналов посещенных адресов и дат посещения:
		//попытка использования массива адресов открытых страниц из локального хранилища
		var URLlog=JSON.parse(localStorage.URLlog);
		//удаление адресов из начала массива, пока в массиве не останется 5 адресов
		while(URLlog.length>5) URLlog.shift(0);
		//попытка использоваения массива дат открытия страниц из локального хранилища
		var log=JSON.parse(localStorage.log);
		//удаление дат из начала массива, пока в массиве не останется 5 дат
		while(log.length>5) log.shift(0);
		//проверка на необходимость срабатывания реакций:
		//только если сделан переход со страницы на страницу (не обновление страницы)
		if(location.href!=URLlog[URLlog.length-1]){
			//если сделан переход на одну из последних пяти посещенных страниц,
			//очищаем массив и показываем модальное окно 3
			if(URLlog.indexOf(location.href)!==-1){
				while(URLlog.length>0) URLlog.shift(0);//очистка массива адресов
				alert_for_back();
			}
			//только если не возникла реакция возврата на предыдущий адрес
			//проверяем необходимость реакции на быстрые переходы:
			else{
				//если сделано 5 переходов меньше чем за минуту -
				//очищаем массив и показываем модальное окно 2
				if(log.length>=5 &&  ((new Date())-Date.parse(log[0]))<60000){
					while(log.length>0) log.shift(0);//очистка массива дат
					alert_for_speed();
				}
			}
			//в любом случае, независимо от срабатывания реакций, при переходе со страницы на страницу:
			URLlog.push(location.href);	//запись адреса текущей страницы в массив
			log.push(new Date());		//запись даты перехода в массив
		}
	}
	catch(e){
		var URLlog=new Array();	//инициализация массива адресов открытых страниц
		var log=new Array();	//инициализация массива дат открытия страниц
	}
	//запись массива адресов в локальное хранилище в формате JSON
	localStorage.URLlog=JSON.stringify(URLlog);
	//запись массива дат в локальное хранилище в формате JSON
	localStorage.log=JSON.stringify(log);

}
//запуск подготовки среды при загрузке окна
window.onload = function(){prepare_environment();};
//скрытие сообщений при щелчке на фон
function hide(elem_id){
	$("#" + elem_id).css({"display" : "none"});
	timer = setInterval(alert_over_time, timeout);
	if(ignore)
	{
		try
		{
			var countignore = localStorage.getItem("countignore");
		}
		catch(e)
		{
			localStorage.setItem("countignore", countignore);
		}
		countignore++;
		localStorage.setItem("countignore", countignore);
		if(countignore > 2) alert_for_ignore();
	}
	else
	{
		localStorage.setItem("countignore", 0);
	}
	ignore = true;
}

//показ сообщений
function alert_over_time(){
	$("#alert1").css({"display":"block"});
	clearInterval(timer);
}

function alert_for_speed(){
	$("#alert2").css({"display":"block"});
	clearInterval(timer);
}

function alert_for_back(){
	$("#alert3").css({"display":"block"});
	clearInterval(timer);
}
//ДИАЛОГ
//показ-скрытие диалогового модуля
function toggleDialog() {
	//закрытие
	if(dialogOn)
	{
		$("#dialog").animate({"margin-left":"-40px"}, 1000, function() {});
		dialogOn=false;
		timer=setInterval(alert_over_time, timeout);
	}
	//открытие
	else
	{
		$("#dialog").animate({"margin-left":"-400px"}, 1000, function() {});
		dialogOn=true;
		clearInterval(timer);
	}
}

//база знаний
var knowledge = [
    ["Сила трения", "возникает", "при соприкосновении поверхностей тел и препятствуют их относительному перемещению."],
	["Трение", "бывает", "двух видов: внешнее (сухое) и внутреннее (вязкое)."],
	["Внешним трением", "называют", "трение между поверхностями двух твердых тел при отсутствии какой-либо прослойки, например смазки, между ними."],
	["Внутренним трением", "называют", "трение между твердым телом и жидкой или газообразной средой, а также между слоями такой среды. "],
	["Внешнее трение", "бывает", "трёх видов: трение покоя, скольжения и качения. "],
	["Сила трения покоя", "возникает", "при попытке внешней силы F вызвать скольжение одного тела по другому. "],
	["Сила трения покоя", "равна", "по модулю силе, пытающейся сдвинуть тело, и направлена в противоположную сторону. <br><img src='Formula1.png'/>"],
	["Сила трения скольжения", "возникает", ", если одно тело скользит по поверхности другого тела."],
	["Трение", "обусловлено", ",взаимодействием в точках соприкосновения на молекулярном уровне."],
	["Молекулярная модель трения", "объясняет", ", почему сила трения не зависит от площади соприкосновения тел."],
	["Качение", "возникает", ", при качении одного твердого тела (цилиндра или шара) по поверхности другого."],
	["Деформация поверхности", "является", "причиной возникновения трения качения."],
	["Равенство нулю углового ускорения", "свидетельствует", " о том, что сумма моментов сил, приложенных к катку, также равна нулю."],
	["Наклонный маятник", "используется", "для определения коэффициента трения качения"],
	["Энергия шарика", "уменьшается", "за счет трения качения и угол максимального отклонения нити в другую сторону α<α0"],
	["Сила трения качения", "равна", "отношению произведения коэффициента трения качения и силы реакции опоры к радиусу катящегося тела. <br align='center'><img src='images/Formula6.png'/>"],
	["Коэффициент трения качения", "определяется", "методом наклонного маятника по уменьшению со временем амплитуды качений шара на наклонной плоскости."],
	["Консервативной", "называется", "сила, если ее работа  не зависит от траектории, а определяется только начальным и конечным положениями тела."],
	["Неконсервативной", "называется", "сила, если ее работа  зависит от траектории."],
	["Качение", "бывает", "трех видов: чистое качение, качение со скольжением, чистое скольжение."],
	["Сила трения покоя", "равна", "внешней силе и направлена в противоположную сторону."],
	["Результирующая всех сил упругой деформации поверхности", "будет", "вертикальна."],
	["Трение", "- это", "процесс механического взаимодействия соприкасающихся тел при их относительном смещении в плоскости касания (внешнее трение) либо при относительном смещении параллельных слоёв жидкости, газа или деформируемого твёрдого тела (внутреннее трение, или вязкость)."],
	["Сила трения", "- это", "сила, возникающая при соприкосновении двух тел и препятствующая их относительному движению. Причиной возникновения трения является шероховатость трущихся поверхностей и взаимодействие молекул этих поверхностей."],
	["Поверхность тела", "покрыта", "микроскопическими неровностями."],
	["Площадь соприкосновения", "определяется", "силой, прижимающей тела друг к другу."],
	["Силу трения качения", "можно оценить", "по горизонтальной внешней силе, приложенной к оси цилиндра и вызывающей равномерное качение тела по горизонтальной плоскости. В этом случае сила трения качения Fтр. к компенсируется силой тяги F."],
	["Кинетическая энергия поступательного движения тела", "уменьшается", "и ее изменение равно работе силы трения качения."],
	["Силы внутреннего трения", "зависят", "от скорости движения тела в среде."],
	["Сила внутреннего трения", "линейно возрастает", "с увеличением скорости."],
	["Закон кулона", "гласит", ",максимальное значение модуля силы трения покоя прямо пропорционально модулю силы нормальной реакции опоры."],
	["Коэффициент трения", "характеризует", "обе трущиеся поверхности и зависит не только от материала этих поверхностей, но и от качества их обработки."],
	["Сила трения скольжения", "направлена", "вдоль поверхности соприкосновения тел, но в отличие от силы трения покоя, которая противоположна внешней силе, стремящейся сдвинуть тело, сила трения скольжения всегда направлена противоположно относительной скорости."],
	["Модуль силы трения скольжения", "пропорционален", "прижимающей силе, а значит, нормальной силе реакции опоры."],
	["Сила трения", "зависит", "от относительной скорости движения тел."],
	["Силa вязкого трения", "возникает", "при движении твердого тела в жидкости или газе."],
	["Главная особенность силы сопротивления", "состоит", "в том, что она появляется только при наличии относительного движения тела и окружающей среды."],
	["Модуль силы сопротивления", "зависит", "от размеров, формы и состояния поверхности тела, свойств среды (жидкости или газа), в которой тело движется, и, наконец, от относительной скорости движения тела и среды."],
	["Сила трения", "направлена", "в сторону противодействия относительному смещению этих поверхностей."],
	["Сухим", "называют", "трение, которое возникает между поверхностями твердых тел."],
	["Законы сухого трения", "говорят", "о том, что максимальная сила трения покоя и сила трения скольжения не зависят от площади поверхностей соприкосновения соприкасающихся тел, подверженных трению."],
	["Вязким", "называют", "трение между твердым телом и жидкостью (или газом)."],
	["Сила вязкого трения", "становится равной нулю", "если скорость относительного движения тел обращается в нуль."],
	["Сила трения скольжения", "зависит", "от формы, размеров и состояния поверхности тела, скорости движения тела относительно среды, вязкости среды."],
	["Сила трения", "измеряется", "в Ньютонах."],
	["Трение качения", "возникает", "между шарообразным телом и поверхностью, по которой оно катится."],
	["Силы трения", "имеют", "электромагнитную природу."],
	["Коэффициент трения", "зависит", "от материалов соприкасающихся тел и от качества обработки поверхностей."],
	["Ускорением свободного падения", "является", "ускорение, придаваемое телу силой тяжести"],
	["Гравитационным ускорением", "является", "ускорение свободного падения"],
	["Мгновенная скорость", "-это", "скорость тела в данный момент времени или в данной точке траектории"],
	["Инерция", "-это", "явление сохранения скорости тела при отсутствии действия на него других тел"],
	["Движением по инерции", "называется", "движение тела при отсутствии действия на него других тел"],
	["Вес тела", "-это", "сила с которой тело действует на опору"],
	["Траектория", "-это", "вообржаемая линия, которую описывает двужущаяся материальная точка"],
	["Материальная точка", "-это", "тело, размерами которого можно принебречь в данных условиях"],
	["Механическим движением", "является", "изменение положения тел относительно других тел в пространстве с течением времени"],
	["Динамика", "изучает", "закономерности движения тел с учетом их взаимодействия с другими телами"],
	["Деформация", "-это", "изменение формы и (или) объема тела под действием внешних сил"],
	["Закон всемирного тяготения", "говорит", "что все материальные тела притягиваются друг к другу"],
	["Механическая энергия", "-это", "скалярная величина, характеризующая способность тела совершить механическую работу"],
	["Периодом колебания", "называется", "наименьший промежуток времени, за который система совершает одно полное колебание"],
	["Колебанием", "является", "движение, которое точно или приблизительно повторяется с течением времени"],
	["Работа", "измеряется", "в джоулях(ньютонах умноженных на метр)"],
	["Масса тела", "измеряется", "в килограммах"],
	["Энергия", "измеряется", "в джоулях"],
	["Импульс тела", "измеряется", "в килограмм-метр на секунду"],
	["Основной задачей механики", "является", "определение положения тела в любой момент времени"],
	["Ускорение", "измеряется", "в метрах на секунду в квадрате(метр в секунду за секунду)"],
	["Ускорение", "-это", "величина определяющая быстроту изменения скорости тела"],
	["Ускорение", "определяет", "величину изменения скорочти тела"],
	["Частота колебаний", "-это", "число колебаний, совершаемых телом в единицу времени"],
	["Частота колебаний", "равна", "количеству повторений или возникновения событий в единицу времени"],
	["Частота", "измеряется", "в герцах"],
	["Фаза колебаний", "-это", "величина, характеризующая отклонение от точки полежения равновесия"],
	["Фаза колебаний", "характеризует", "отклонение точки от положения рвновесия"],
	["Фаза колебаний", "измеряется", "в радианах"],
	["Инертность", "-это", "свойство всех тел, которое состоит в том, что для изменения скорости тела требуется некотоое время"],
	["Сила", "направлена", "в сторону ускорения"],
	["Деформациями тел", "называют", "растяжение, сжатие,изгиб и кручение"],
	["Следствием деформации", "является", "сила упругости"],
	["Причиной деформации", "является", "движение одной части тела отностильно другой"],
	["Колебательным движением", "называется", "движение тела из стороны в сторону относительно его начального положения"],
	["Установка", "состоит", "из следующих компонент: <br align='center'><embed src='2D_Animation/FirstAnimation.swf'>"],
	["Установка", "работает", "следующим образом: <br align='center'><embed src='2D_Animation/SecondAnimation.swf'>"]
];

//поиск и вывод ответа и вопроса
function ask(questionInput){
	var question=document.getElementById(questionInput).value.trim();
	//выдвижение диалогового модуля
	$("#dialog").animate({"margin-left":"-400px"}, 1000, function() {});
	dialogOn=true;
	//вывод вопроса
	//document.getElementById("history").innerHTML+="<div class='question'>"+question+"</div>";
	var newDiv=document.createElement("div");
	newDiv.className='question';
	newDiv.innerHTML=question;
	document.getElementById("history").appendChild(newDiv);
	//поиск и вывод ответа
	//document.getElementById("history").innerHTML+="<div class='answer'>"+getAnswer(question)+"</div>";
	//создаем блок <div>
	newDiv=document.createElement("div");
	//задаем класс оформления созданного блока
	newDiv.className='answer';
	//получаем ответ на вопрос и наполняем им созданный блок
	newDiv.innerHTML=getAnswer(question);
	//ОЗВУЧКА - СИНТЕЗ РЕЧИ
	//флаг, нужна ли озвучка (не нужна, если есть анимация)
	var needSound=true;
	//проходим по элементам HTML-кода ответа
	for(var i=0;i<newDiv.childNodes.length;i++){
		//если находим элемент <embed>
		if(newDiv.childNodes[i].tagName=="EMBED"){
			//alert("EMBED detected.");
			//сбрасываем флаг и выходим из цикла
			needSound=false;
			break;
		}
	}
	//если флаг не был сброшен
	if(needSound){
		//добавляем в ответ тег аудио, ссылающийся на звук от синтезатора речи яндекса
		//в обращении к яндексу tts.voicetech.yandex.net указывается:
		// - формат звука: format=wav
		// - язык озвучиваемого текста: lang=ru-RU
		// - ключ, полученный при регистрации в личном кабинете для SpeechKit Cloud API: key=4a4d3a13-d206-45fc-b8fb-e5a562c9f587
		// - озвучиваемый текст, который берется из сгенерированного ответа: text="+newDiv.innerText+"
		//alert("Incoming transmission.");
		newDiv.innerHTML+="<audio controls='true' autoplay='true' src='http://tts.voicetech.yandex.net/generate?format=wav&lang=ru-RU&key=5c6d6536-b453-4589-9bc7-f16c7a795106&text="+(newDiv.innerText||newDiv.textContent)+"'></audio>";
	}
	// КОНЕЦ ОЗВУЧКИ
	document.getElementById("history").appendChild(newDiv);
	// ЕЩЕ КУСОЧЕК ДЛЯ ОЗВУЧКИ
	//запуск звука
	if(newDiv.lastChild.tagName=="AUDIO"){
		newDiv.lastChild.play();
	}
	//прокрутка истории в самый низ
	document.getElementById("history").scrollTop = document.getElementById("history").scrollHeight;
	//очистка текстового поля для ввода вопроса
	document.getElementById(questionInput).value="";
}

//псевдоокончания сказуемых (глаголов, кратких причастий и прилагательных )
var endings = [ ["ет","(ет|ут|ют)"], ["ут","(ет|ут|ют)"], ["ют","(ет|ут|ют)"],																										//1 спряжение
        			["ит","(ит|ат|ят)"], ["ат","(ит|ат|ят)"], ["ят","(ит|ат|ят)"],																											//2 спряжение
        			["ется","(ет|ут|ют)ся"], ["утся","(ет|ут|ют)ся"], ["ются","(ет|ут|ют)ся"],																					//1 спряжение, возвратные
        			["ится","(ит|ат|ят)ся"], ["атся","(ит|ат|ят)ся"], ["ятся","(ит|ат|ят)ся"],																					//2 спряжение, возвратные
        			["ен","ен"], ["ена","ена"], ["ено","ено"], ["ены","ены"],	["ан","ан"], ["ана","ана"], ["ано","ано"], ["аны","аны"], //краткие прилагательные
        			["жен","жен"], ["жна","жна"], ["жно","жно"], ["жны","жны"],																													//краткие прилагательные
							["такое","- это"], ["работает", "представлен"], ["обусловлено","обусловлено"], ["равна", "равна"]];																																																	//для вопроса "что такое А?" ответ - "А - это ..."
//черный список слов, распознаваемых как сказуемые по ошибке
var blacklist = [ "замена", "замены", "атрибут", "маршрут", "член", "нет" ];
//функция определения сказуемых по соответствующим псевдоокончаниям
function getEnding(word)
{
  //проверка по черному списку
  if (blacklist.indexOf(word)!==-1) return -1;
  //перебор псевдоокончаний
  for (var j = 0; j < endings.length; j++)
  {
    //проверка, оканчивается ли i-ое слово на j-ое псевдоокончание
    if(word.substring(word.length-endings[j][0].length)==endings[j][0]){
        return j;   //возврат номера псевдоокончания
    }
  }
  return -1;  //если совпадений нет - возврат -1
}

//функция, которая делает первую букву маленькой
function small1(str)
{
  return str.substring(0, 1).toLowerCase() + str.substring(1);
}

//функция, которая делает первую букву большой
function big1(str)
{
  return str.substring(0, 1).toUpperCase() + str.substring(1);
}

//главная функция, обрабатывающая запросы клиентов
function getAnswer(question)
{
  //знаки препинания
  var separators = "'\",.!?()[]\\/";
  //получение текста из параметра запроса
  var txt = small1(question);
  //добавление пробелов перед знаками препинания
  for (var i = 0; i < separators.length; i++)
     txt = txt.replace(separators[i], " " + separators[i]);
  //массив слов и знаков препинания
  var words = txt.split(' ');
  //флаг, найден ли ответ
  var result = false;
  //формируемый функцией ответ на вопрос
  var answer = "";
  //перебор слов
  for (var i = 0; i < words.length; i++)
  {
		//alert(words[i]);
    //поиск номера псевдоокончания
    var ending = getEnding(words[i]);
    //если псевдоокончание найдено – это сказуемое, подлежащее в вопросе после него
    if (ending >= 0)
    {
			//---ТОЧНЫЙ ПОИСК---
			//---ПОИСК С ПОМОЩЬЮ РЕГУЛЯРНЫХ ВЫРАЖЕНИЙ---
	    //замена псевдоокончания на набор возможных окончаний
	    words[i] = words[i].substring(0, words[i].length - endings[ending][0].length) + endings[ending][1];
	    //создание регулярного выражения для поиска по сказуемому из вопроса
	    var predicate = new RegExp(words[i]);
	    //для кратких прилагательных захватываем следующее слово
	    if (endings[ending][0] == endings[ending][1])
	    {
	      predicate = new RegExp(words[i] + " " + words[i + 1]);
	      i++;
	    }
			var subject_array = words.slice(i + 1);
			var subject_text = subject_array.join(" ");
	    //создание регулярного выражения для поиска по подлежащему из вопроса
			//из слов подлежащего выбрасываем короткие предлоги (периметр у квадрата = периметр квадрата)
			for (var j = 0; j < subject_array.length; j++){
				if(subject_array[j].length < 3){
					subject_array.splice(j);
					j--;
				}
			}
			var subject_string = subject_array.join(".*");
			//только если в послежащем больше трех символов
			if (subject_string.length>3)
			{
				var subject = new RegExp(".*" + subject_string + ".*");
				//поиск совпадений с шаблонами среди связей семантической сети
				for (var j = 0; j < knowledge.length; j++)
				{
					if (predicate.test(knowledge[j][1]) && (subject.test(knowledge[j][0]) || subject.test(knowledge[j][2])))
					{
						//создание простого предложения из семантической связи
						answer+=big1(knowledge[j][0] + " " + knowledge[j][1] + " " + knowledge[j][2] + ". ");
						result = true;
					}
				}
				//если совпадений с двумя шаблонами нет,
				if (result == false){
					//поиск совпадений только с шаблоном подлежащего
					for (var j = 0; j < knowledge.length; j++)
					{
						if ((subject.test(knowledge[j][0]) || subject.test(knowledge[j][2])))
						{
							//создание простого предложения из семантической связи
							answer+=big1(knowledge[j][0] + " " + knowledge[j][1] + " " + knowledge[j][2] + ". ");
							result = true;
						}
					}
				}
			}
  	}
  }
  //если ответа нет
  if(!result)
  	answer = "Ответ не найден. <br/>";
		//если ответ есть - добавляем увеличение картинок
	else
		answer = answer.replace("<img ", "<img onclick='zoom(this.src)'");
    return answer;
}

function zoom(src){
	document.getElementById("img_in_alert").src=src;
	$("#imgalert").css({"display":"block"});
	clearInterval(timer);
}
